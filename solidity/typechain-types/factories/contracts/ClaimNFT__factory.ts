/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ClaimNFT, ClaimNFTInterface } from "../../contracts/ClaimNFT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "claimNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "revokeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d76806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632d34567014610067578063485cc95514610083578063572b6c051461009f578063704b6c02146100cf5780637da0a877146100eb578063ba4a0dfb14610109575b600080fd5b610081600480360381019061007c91906108e9565b610125565b005b61009d60048036038101906100989190610916565b61020c565b005b6100b960048036038101906100b491906108e9565b610356565b6040516100c69190610971565b60405180910390f35b6100e960048036038101906100e491906108e9565b6103b0565b005b6100f3610496565b604051610100919061099b565b60405180910390f35b610123600480360381019061011e91906109ec565b6104c0565b005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a890610a9c565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008060019054906101000a900460ff1615905080801561023d5750600160008054906101000a900460ff1660ff16105b8061026a575061024c306106a5565b1580156102695750600160008054906101000a900460ff1660ff16145b5b6102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a090610b2e565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156102e6576001600060016101000a81548160ff0219169083151502179055505b6102ef836106c8565b6102f882610808565b80156103515760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516103489190610ba0565b60405180910390a15b505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661043c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043390610a9c565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082905060008173ffffffffffffffffffffffffffffffffffffffff1662fdd58e6104ea61084c565b856040518363ffffffff1660e01b8152600401610508929190610bca565b602060405180830381865afa158015610525573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105499190610c08565b11610589576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058090610c81565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16634afbecfe6105ad61084c565b868560016040518563ffffffff1660e01b81526004016105d09493929190610cd2565b600060405180830381600087803b1580156105ea57600080fd5b505af11580156105fe573d6000803e3d6000fd5b505050506000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16634cd75ad061064d61084c565b60016040518363ffffffff1660e01b815260040161066c929190610d17565b600060405180830381600087803b15801561068657600080fd5b505af115801561069a573d6000803e3d6000fd5b505050505050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008060019054906101000a900460ff161590508080156106f95750600160008054906101000a900460ff1660ff16105b806107265750610708306106a5565b1580156107255750600160008054906101000a900460ff1660ff16145b5b610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90610b2e565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156107a2576001600060016101000a81548160ff0219169083151502179055505b6107ab826103b0565b80156108045760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516107fb9190610ba0565b60405180910390a15b5050565b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061085733610356565b1561086b57601436033560601c905061087a565b61087361087e565b905061087b565b5b90565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108b68261088b565b9050919050565b6108c6816108ab565b81146108d157600080fd5b50565b6000813590506108e3816108bd565b92915050565b6000602082840312156108ff576108fe610886565b5b600061090d848285016108d4565b91505092915050565b6000806040838503121561092d5761092c610886565b5b600061093b858286016108d4565b925050602061094c858286016108d4565b9150509250929050565b60008115159050919050565b61096b81610956565b82525050565b60006020820190506109866000830184610962565b92915050565b610995816108ab565b82525050565b60006020820190506109b0600083018461098c565b92915050565b6000819050919050565b6109c9816109b6565b81146109d457600080fd5b50565b6000813590506109e6816109c0565b92915050565b600080600060608486031215610a0557610a04610886565b5b6000610a13868287016108d4565b9350506020610a24868287016108d4565b9250506040610a35868287016109d7565b9150509250925092565b600082825260208201905092915050565b7f52657175697265732041646d696e000000000000000000000000000000000000600082015250565b6000610a86600e83610a3f565b9150610a9182610a50565b602082019050919050565b60006020820190508181036000830152610ab581610a79565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610b18602e83610a3f565b9150610b2382610abc565b604082019050919050565b60006020820190508181036000830152610b4781610b0b565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b6000610b8a610b85610b8084610b4e565b610b65565b610b58565b9050919050565b610b9a81610b6f565b82525050565b6000602082019050610bb56000830184610b91565b92915050565b610bc4816109b6565b82525050565b6000604082019050610bdf600083018561098c565b610bec6020830184610bbb565b9392505050565b600081519050610c02816109c0565b92915050565b600060208284031215610c1e57610c1d610886565b5b6000610c2c84828501610bf3565b91505092915050565b7f53656e64657220646f6573206e6f74206f776e20746865206173736574000000600082015250565b6000610c6b601d83610a3f565b9150610c7682610c35565b602082019050919050565b60006020820190508181036000830152610c9a81610c5e565b9050919050565b6000610cbc610cb7610cb284610b4e565b610b65565b6109b6565b9050919050565b610ccc81610ca1565b82525050565b6000608082019050610ce7600083018761098c565b610cf4602083018661098c565b610d016040830185610bbb565b610d0e6060830184610cc3565b95945050505050565b6000604082019050610d2c600083018561098c565b610d396020830184610cc3565b939250505056fea2646970667358221220ca486c8087d5fdf5c55d0ffd4ca30fb8db67456449eba722c0ef190a575cbfa264736f6c63430008110033";

type ClaimNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimNFT__factory extends ContractFactory {
  constructor(...args: ClaimNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ClaimNFT> {
    return super.deploy(overrides || {}) as Promise<ClaimNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ClaimNFT {
    return super.attach(address) as ClaimNFT;
  }
  override connect(signer: Signer): ClaimNFT__factory {
    return super.connect(signer) as ClaimNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimNFTInterface {
    return new utils.Interface(_abi) as ClaimNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimNFT {
    return new Contract(address, _abi, signerOrProvider) as ClaimNFT;
  }
}
