/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ClaimToken,
  ClaimTokenInterface,
} from "../../contracts/ClaimToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "externalClaimNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gasToken",
        type: "address",
      },
    ],
    name: "externalSetGasToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
      {
        internalType: "address",
        name: "gasToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "revokeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f18806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063704b6c021161005b578063704b6c02146100ea5780637da0a877146101065780639f4753b914610124578063c0c53b8b146101405761007d565b80632d34567014610082578063572b6c051461009e5780636039cab7146100ce575b600080fd5b61009c60048036038101906100979190610a78565b61015c565b005b6100b860048036038101906100b39190610a78565b610243565b6040516100c59190610ac0565b60405180910390f35b6100e860048036038101906100e39190610b11565b61029d565b005b61010460048036038101906100ff9190610a78565b61047a565b005b61010e610560565b60405161011b9190610b73565b60405180910390f35b61013e60048036038101906101399190610a78565b61058a565b005b61015a60048036038101906101559190610b8e565b61065a565b005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101df90610c3e565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b60006102a76107e6565b9050600083905060008173ffffffffffffffffffffffffffffffffffffffff1662fdd58e84866040518363ffffffff1660e01b81526004016102ea929190610c6d565b602060405180830381865afa158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b9190610cab565b1161036b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036290610d24565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16634afbecfe83878660016040518563ffffffff1660e01b81526004016103ab9493929190610d89565b600060405180830381600087803b1580156103c557600080fd5b505af11580156103d9573d6000803e3d6000fd5b505050506000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16634cd75ad08460016040518363ffffffff1660e01b8152600401610440929190610dce565b600060405180830381600087803b15801561045a57600080fd5b505af115801561046e573d6000803e3d6000fd5b50505050505050505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd90610c3e565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610c3e565b60405180910390fd5b80609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060019054906101000a900460ff1615905080801561068b5750600160008054906101000a900460ff1660ff16105b806106b8575061069a30610818565b1580156106b75750600160008054906101000a900460ff1660ff16145b5b6106f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ee90610e69565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610734576001600060016101000a81548160ff0219169083151502179055505b61073d8461083b565b610746836109c9565b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156107e05760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516107d79190610ec7565b60405180910390a15b50505050565b60006107f133610243565b1561080557601436033560601c9050610814565b61080d610a0d565b9050610815565b5b90565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008060019054906101000a900460ff1615905080801561086c5750600160008054906101000a900460ff1660ff16105b80610899575061087b30610818565b1580156108985750600160008054906101000a900460ff1660ff16145b5b6108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90610e69565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610915576001600060016101000a81548160ff0219169083151502179055505b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080156109c55760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516109bc9190610ec7565b60405180910390a15b5050565b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4582610a1a565b9050919050565b610a5581610a3a565b8114610a6057600080fd5b50565b600081359050610a7281610a4c565b92915050565b600060208284031215610a8e57610a8d610a15565b5b6000610a9c84828501610a63565b91505092915050565b60008115159050919050565b610aba81610aa5565b82525050565b6000602082019050610ad56000830184610ab1565b92915050565b6000819050919050565b610aee81610adb565b8114610af957600080fd5b50565b600081359050610b0b81610ae5565b92915050565b600080600060608486031215610b2a57610b29610a15565b5b6000610b3886828701610a63565b9350506020610b4986828701610a63565b9250506040610b5a86828701610afc565b9150509250925092565b610b6d81610a3a565b82525050565b6000602082019050610b886000830184610b64565b92915050565b600080600060608486031215610ba757610ba6610a15565b5b6000610bb586828701610a63565b9350506020610bc686828701610a63565b9250506040610bd786828701610a63565b9150509250925092565b600082825260208201905092915050565b7f52657175697265732041646d696e000000000000000000000000000000000000600082015250565b6000610c28600e83610be1565b9150610c3382610bf2565b602082019050919050565b60006020820190508181036000830152610c5781610c1b565b9050919050565b610c6781610adb565b82525050565b6000604082019050610c826000830185610b64565b610c8f6020830184610c5e565b9392505050565b600081519050610ca581610ae5565b92915050565b600060208284031215610cc157610cc0610a15565b5b6000610ccf84828501610c96565b91505092915050565b7f53656e64657220646f6573206e6f74206f776e20746865206173736574000000600082015250565b6000610d0e601d83610be1565b9150610d1982610cd8565b602082019050919050565b60006020820190508181036000830152610d3d81610d01565b9050919050565b6000819050919050565b6000819050919050565b6000610d73610d6e610d6984610d44565b610d4e565b610adb565b9050919050565b610d8381610d58565b82525050565b6000608082019050610d9e6000830187610b64565b610dab6020830186610b64565b610db86040830185610c5e565b610dc56060830184610d7a565b95945050505050565b6000604082019050610de36000830185610b64565b610df06020830184610d7a565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000610e53602e83610be1565b9150610e5e82610df7565b604082019050919050565b60006020820190508181036000830152610e8281610e46565b9050919050565b600060ff82169050919050565b6000610eb1610eac610ea784610d44565b610d4e565b610e89565b9050919050565b610ec181610e96565b82525050565b6000602082019050610edc6000830184610eb8565b9291505056fea264697066735822122070e1672ae2e6b9ed5e576eab35f39af3fe9c1cd6c0d4cd2103351d39d0824c8c64736f6c63430008110033";

type ClaimTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClaimToken__factory extends ContractFactory {
  constructor(...args: ClaimTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ClaimToken> {
    return super.deploy(overrides || {}) as Promise<ClaimToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ClaimToken {
    return super.attach(address) as ClaimToken;
  }
  override connect(signer: Signer): ClaimToken__factory {
    return super.connect(signer) as ClaimToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimTokenInterface {
    return new utils.Interface(_abi) as ClaimTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClaimToken {
    return new Contract(address, _abi, signerOrProvider) as ClaimToken;
  }
}
